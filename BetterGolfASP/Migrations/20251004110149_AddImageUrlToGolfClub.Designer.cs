// <auto-generated />
using System;
using BetterGolfASP.DB;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BetterGolfASP.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20251004110149_AddImageUrlToGolfClub")]
    partial class AddImageUrlToGolfClub
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BetterGolfASP.Models.GolfClub", b =>
                {
                    b.Property<int>("GolfClubID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GolfClubID"));

                    b.Property<string>("ClubType")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Handedness")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.HasKey("GolfClubID");

                    b.ToTable("GolfClubs");

                    b.HasDiscriminator<string>("ClubType").HasValue("GolfClub");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Models.Customer", b =>
                {
                    b.Property<int>("CustomerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerID"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CustomerID");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("Models.Order", b =>
                {
                    b.Property<int>("OrderID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderID"));

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("OrderID");

                    b.HasIndex("CustomerId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Models.OrderRow", b =>
                {
                    b.Property<int>("OrderRowID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderRowID"));

                    b.Property<int>("GolfclubID")
                        .HasColumnType("int");

                    b.Property<int?>("OrderID")
                        .HasColumnType("int");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("OrderRowID");

                    b.HasIndex("GolfclubID");

                    b.HasIndex("OrderID");

                    b.ToTable("OrderRows");
                });

            modelBuilder.Entity("BetterGolfASP.Models.IronClub", b =>
                {
                    b.HasBaseType("BetterGolfASP.Models.GolfClub");

                    b.Property<int>("IronType")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("Iron");
                });

            modelBuilder.Entity("BetterGolfASP.Models.PutterClub", b =>
                {
                    b.HasBaseType("BetterGolfASP.Models.GolfClub");

                    b.Property<int>("TypeOfPutter")
                        .HasColumnType("int");

                    b.Property<int>("TypeOfShaft")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("Putter");
                });

            modelBuilder.Entity("BetterGolfASP.Models.WoodClub", b =>
                {
                    b.HasBaseType("BetterGolfASP.Models.GolfClub");

                    b.Property<double>("Loft")
                        .HasColumnType("float");

                    b.Property<int>("WoodType")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("Wood");
                });

            modelBuilder.Entity("Models.Order", b =>
                {
                    b.HasOne("Models.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("Models.OrderRow", b =>
                {
                    b.HasOne("BetterGolfASP.Models.GolfClub", "Golfclub")
                        .WithMany()
                        .HasForeignKey("GolfclubID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Models.Order", null)
                        .WithMany("OrderRows")
                        .HasForeignKey("OrderID");

                    b.Navigation("Golfclub");
                });

            modelBuilder.Entity("Models.Customer", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("Models.Order", b =>
                {
                    b.Navigation("OrderRows");
                });
#pragma warning restore 612, 618
        }
    }
}
